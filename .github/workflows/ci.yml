name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker
        run: |
          echo "Setting up Docker environment"
          docker --version
          docker compose --version

      - name: Build and Start Containers
        run: |
          echo "Building and starting containers with docker-compose"
          docker compose -f docker-compose.yml build
          docker compose -f docker-compose.yml up -d

      - name: Wait for Services to Start
        run: |
          echo "Waiting for services to start..."
          sleep 30

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
      - name: Build
        run: ./gradlew clean assemble

      - name: Unit Tests
        run: ./gradlew test

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Unit Test Results
          path: build/test-results/test/*.xml

      - name: Database Tests
        run: ./gradlew integrate

      - name: Upload Integration Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Integration Test Results
          path: build/test-results/integrate/*.xml

      - name: BDD Tests and Coverage
        run: |
          ./gradlew generateCucumberReports
          ./gradlew jacocoTestReport

      - name: Upload BDD Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: BDD Test Results
          path: build/test-results/bdd/*.xml
      
      - name: Test Application Connectivity
        run: |
            echo "Waiting for the application to start..."
            sleep 30
  
            echo "Testing connectivity to the application using localhost..."
            curl -s -o /dev/null -w "Localhost HTTP Status: %{http_code}\n" http://localhost:8080/demo || echo "Failed to connect to localhost"
  
            echo "Testing connectivity to the application using service name..."
            docker run --rm --network app-network curlimages/curl:latest curl -s -o /dev/null -w "Service Name HTTP Status: %{http_code}\n" http://app:8080/demo || echo "Failed to connect to service name"

      - name: Deploy to Test
        run: |
          echo "Running Deploy to Test inside the Docker Compose network..."
          docker compose exec app sh -c "
            ./gradlew deployToTestWindowsLocal &&
            PIPENV_IGNORE_VIRTUALENVS=1 pipenv install &&
            ./gradlew waitForHeartBeat &&
            curl http://zap:8080/JSON/core/action/newSession -s --proxy zap:8080
          "

      - name: Security Dependency Analysis
        run: ./gradlew dependencyCheckAnalyze

      - name: Performance Tests
        run: ./gradlew runPerfTests --info --stacktrace

      - name: Build Documentation
        run: ./gradlew javadoc

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          echo "Simulating production deployment"
          sleep 5
